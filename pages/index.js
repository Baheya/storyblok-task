import Head from 'next/head';
import { useRef, useEffect, useState } from 'react';

import {
  validateForm,
  handleInvalidField,
  handleFieldBlur,
  handleFieldInput,
} from '../helpers/validation';

import { TextField } from '../components/TextField';

export default function Home() {
  const [visitedFields, setVisitedFields] = useState([]);
  const formRef = useRef();

  // useEffect(() => {
  //   if (typeof window !== undefined) {
  //     formRef.current.setAttribute('noValidate', true);
  //     formRef.current.addEventListener('submit', validateForm);
  //   }
  // }, []);

  return (
    <div className="container">
      <Head>
        <title>Storyblok Task</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <form
          ref={formRef}
          method="post"
          action="/.netlify/functions/form-handler"
        >
          <fieldset>
            <legend>Contact Info</legend>

            <TextField
              label="First Name"
              id="first_name"
              name="user_first_name"
              placeholder="First Name*"
              type="text"
              error="Please enter your first name."
              onInvalid={(e) =>
                handleInvalidField(e, visitedFields, setVisitedFields)
              }
              onBlur={(e) =>
                handleFieldBlur(e, visitedFields, setVisitedFields)
              }
              onChange={(e) => handleFieldInput(e, visitedFields)}
              required
            />

            <TextField
              label="Last Name"
              id="last_name"
              name="user_last_name"
              placeholder="Last Name*"
              type="text"
              error="Please enter your last name."
              onInvalid={(e) =>
                handleInvalidField(e, visitedFields, setVisitedFields)
              }
              onBlur={(e) =>
                handleFieldBlur(e, visitedFields, setVisitedFields)
              }
              onChange={(e) => handleFieldInput(e, visitedFields)}
              required
            />

            <TextField
              label="Work Email"
              id="email"
              name="user_work_email"
              placeholder="Work Email*"
              type="email"
              error="Please enter a valid e-mail address."
              onInvalid={(e) =>
                handleInvalidField(e, visitedFields, setVisitedFields)
              }
              onBlur={(e) =>
                handleFieldBlur(e, visitedFields, setVisitedFields)
              }
              onChange={(e) => handleFieldInput(e, visitedFields)}
              required
            />
          </fieldset>

          <TextField
            label="Message"
            id="msg"
            name="user_message"
            placeholder="Message"
            type="textarea"
            error="Please enter a message."
            onInvalid={(e) =>
              handleInvalidField(e, visitedFields, setVisitedFields)
            }
            onBlur={(e) => handleFieldBlur(e, visitedFields, setVisitedFields)}
            onChange={(e) => handleFieldInput(e, visitedFields)}
            required
          />

          <small className="span-cols">
            For information about our privacy practices and commitment to
            protecting your privacy, please review our Privacy Policy.
          </small>

          <button className="contact-form__button" type="submit">
            Send Message
          </button>
        </form>
      </main>
    </div>
  );
}
